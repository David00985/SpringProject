<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SellerMapper">


<select id="deliver" resultType="OrderProductDetailDTO">
	select m.oid, d.gid, d.gname, d.gsize, d.gamount, d.gcolor, d.gprice, d.gimage, d.confirmed from orders o 
		join orderproductdetail d 
			on o.opindex = d.opindex 
				where o.mid = #{mid}
</select>





<insert id="insert" parameterType="SellerDTO">
	insert into seller( sid,spw,sname,saddress1,saddress2, semail1,semail2 ,spost , sphone1 ,
	sphone2 , sphone3 , sbirth ) values
	
( #{sid}, #{spw}, #{sname}, #{saddress1}, #{saddress2}, #{semail1},#{semail2} ,#{spost} , #{sphone1} ,
	#{sphone2} , #{sphone3} , null  )

</insert>
	
	
<select id="idCheck" resultType="int" parameterType="string">
	select count(*)
	from seller
	where sid = #{sid}

</select>	

<select id="login" resultType="SellerDTO" parameterType="map">
	select *
	from seller
	where sid = #{sid} and spw = #{spw}
</select>
	
<select id="Monthlysales" resultType="OrderDTO" parameterType="String">
select o.ordate, o.oprice from orders o 
	join orderproductdetail r 
		on o.opindex = r.opindex
			join goods g 
				on g.gid = r.gid 
					where g.sid = #{sid} 
</select>

<select id="TodaySalesQuantity" resultType="OrderProductDetailDTO" parameterType="String">
select o.ordate, r.gamount from orders o 
	join orderproductdetail r 
		on o.opindex = r.opindex
			join goods g 
				on g.gid = r.gid 
					where g.sid =#{sid}
</select>

<select id="TodaySaleMoney" resultType="CouponUserDTO" parameterType="String">
select o.gprice, r.code, c.usedtime from orderproductdetail o 
	join goods g 
		on o.gid = g.gid 
			join orderproduct r 
				on o.opindex = r.opindex
					join couponuser c 
						on r.code = c.code 
							where g.sid = #{sid}

</select>

<select id="Recentorderstatus" resultType="OrderDTO" parameterType="String" >
	select o.oname, o.oprice, d.deliverystatus, c.opaymentcheckstatus from orders o 
		join orderdelivery d 
			on o.odelivery = d.odelivery 
				join orderpaymentcheck c 
					on o.opaymentcheck = c.opaymentcheck 
						join orderproductdetail r 
							on r.opindex = o.opindex 
								join goods g 
									on r.gid = g.gid
										where g.sid =#{sid} 
											and o.ordate in 
											(select ordate from (select ordate ,ROW_NUMBER() over (order by ordate desc) r from orders)
											where r between 1 and 10)
										order by o.ordate desc
</select>

<select id="TotalUserCount" resultType="int" parameterType="String">
select  count(DISTINCT o.mid) from orders o 
	join orderproductdetail d 
		on o.opindex = d.opindex 
		join goods g 
			on g.gid = d.gid 
			 	where g.sid = #{sid}
</select>


<select id="Rank" resultType="OrderDTO" parameterType="String">
select  o.oname, sum(oprice) sum from orders o 
			join orderproductdetail d 
				on o.opindex = d.opindex 
					join goods g 
						on g.gid = d.gid 
							where g.sid = #{sid} 
								and o.oname in 
								(select oname from (select  oname , sum(oprice) , ROW_NUMBER() over 
								(order by sum(oprice) desc) r from orders  group by oname)
								where r between 1 and 10)
							group by o.oname 
						order by 2 desc
</select>

<select id="Salesbycategory" resultType="GoodsDTO" parameterType="String"> 
select gcategory , sum(gsell) gsell from goods 
	where sid = #{sid} 
		group by gcategory 
			order by gcategory desc
</select>

<select id="monthlysales" resultType="OrderDTO" parameterType="String">
select EXTRACT (month from ordate) as ordate , sum(o.oprice) sum from orders o
	 join orderproductdetail r 
	  on o.opindex = r.opindex 
 	   join goods g on g.gid = r.gid 
         where g.sid = #{sid} 
   		  group by EXTRACT (month from ordate) 
    		 order by ordate asc
</select>


</mapper>